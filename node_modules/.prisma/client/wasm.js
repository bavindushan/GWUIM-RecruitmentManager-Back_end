
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.12.0
 * Query Engine version: 8047c96bbd92db98a2abc7c9323ce77c02c89dbc
 */
Prisma.prismaVersion = {
  client: "6.12.0",
  engine: "8047c96bbd92db98a2abc7c9323ce77c02c89dbc"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AdditionalinfoScalarFieldEnum = {
  InfoID: 'InfoID',
  ApplicationID: 'ApplicationID',
  Content: 'Content'
};

exports.Prisma.AdminScalarFieldEnum = {
  AdminID: 'AdminID',
  FullName: 'FullName',
  Email: 'Email',
  PasswordHash: 'PasswordHash',
  Department: 'Department',
  PhoneNumber: 'PhoneNumber',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt',
  isDeleted: 'isDeleted'
};

exports.Prisma.ApplicationScalarFieldEnum = {
  ApplicationID: 'ApplicationID',
  UserID: 'UserID',
  JobID: 'JobID',
  SubmissionDate: 'SubmissionDate',
  Status: 'Status',
  Remarks: 'Remarks'
};

exports.Prisma.ApplicationattachmentsScalarFieldEnum = {
  AttachmentID: 'AttachmentID',
  ApplicationID: 'ApplicationID',
  FileType: 'FileType',
  FilePath: 'FilePath',
  UploadedAt: 'UploadedAt'
};

exports.Prisma.ApplicationgeneraldetailsScalarFieldEnum = {
  ApplicationID: 'ApplicationID',
  PostApplied: 'PostApplied',
  FullName: 'FullName',
  NameWithInitials: 'NameWithInitials',
  NIC: 'NIC',
  DOB: 'DOB',
  Gender: 'Gender',
  PhoneNumber: 'PhoneNumber',
  Email: 'Email',
  PresentAddress: 'PresentAddress',
  PermanentAddress: 'PermanentAddress',
  CivilStatus: 'CivilStatus',
  CitizenshipType: 'CitizenshipType',
  CitizenshipDetails: 'CitizenshipDetails',
  EthnicityOrReligion: 'EthnicityOrReligion'
};

exports.Prisma.ApplicationreferencesScalarFieldEnum = {
  ReferenceID: 'ReferenceID',
  ApplicationID: 'ApplicationID',
  Name: 'Name',
  Designation: 'Designation',
  Address: 'Address'
};

exports.Prisma.ApplicationtemplateScalarFieldEnum = {
  TemplateID: 'TemplateID',
  Type: 'Type',
  FilePath: 'FilePath',
  UploadedBy: 'UploadedBy',
  UploadDate: 'UploadDate'
};

exports.Prisma.AuditlogScalarFieldEnum = {
  LogID: 'LogID',
  ActorID: 'ActorID',
  ActorRole: 'ActorRole',
  Action: 'Action',
  Timestamp: 'Timestamp',
  Details: 'Details'
};

exports.Prisma.EmploymenthistoriesScalarFieldEnum = {
  EmploymentID: 'EmploymentID',
  ApplicationID: 'ApplicationID',
  PostHeld: 'PostHeld',
  Institution: 'Institution',
  FromDate: 'FromDate',
  ToDate: 'ToDate',
  LastSalary: 'LastSalary'
};

exports.Prisma.ExperiencedetailsScalarFieldEnum = {
  ExperienceID: 'ExperienceID',
  ApplicationID: 'ApplicationID',
  Description: 'Description'
};

exports.Prisma.Gce_al_resultsScalarFieldEnum = {
  AL_ID: 'AL_ID',
  ApplicationID: 'ApplicationID',
  Subject: 'Subject',
  Grade: 'Grade'
};

exports.Prisma.Gce_ol_resultsScalarFieldEnum = {
  OL_ID: 'OL_ID',
  ApplicationID: 'ApplicationID',
  Subject: 'Subject',
  Grade: 'Grade'
};

exports.Prisma.JobvacancyScalarFieldEnum = {
  JobID: 'JobID',
  Title: 'Title',
  Description: 'Description',
  Type: 'Type',
  Department: 'Department',
  Level: 'Level',
  PostedBy: 'PostedBy',
  PostedDate: 'PostedDate',
  ExpiryDate: 'ExpiryDate',
  Status: 'Status',
  TemplateID: 'TemplateID'
};

exports.Prisma.LanguageproficienciesScalarFieldEnum = {
  LangProfID: 'LangProfID',
  ApplicationID: 'ApplicationID',
  Language: 'Language',
  CanSpeak: 'CanSpeak',
  CanRead: 'CanRead',
  CanWrite: 'CanWrite',
  CanTeach: 'CanTeach'
};

exports.Prisma.ProfessionalqualificationsScalarFieldEnum = {
  PQ_ID: 'PQ_ID',
  ApplicationID: 'ApplicationID',
  Institution: 'Institution',
  QualificationName: 'QualificationName',
  FromYear: 'FromYear',
  ToYear: 'ToYear',
  ResultOrExamPassed: 'ResultOrExamPassed'
};

exports.Prisma.ResearchandpublicationsScalarFieldEnum = {
  ResearchID: 'ResearchID',
  ApplicationID: 'ApplicationID',
  Description: 'Description'
};

exports.Prisma.SpecialqualificationsScalarFieldEnum = {
  SpecialQualID: 'SpecialQualID',
  ApplicationID: 'ApplicationID',
  Description: 'Description'
};

exports.Prisma.SuperadminScalarFieldEnum = {
  SuperAdminID: 'SuperAdminID',
  FullName: 'FullName',
  Email: 'Email',
  PasswordHash: 'PasswordHash',
  PhoneNumber: 'PhoneNumber',
  CreatedAt: 'CreatedAt'
};

exports.Prisma.UniversityeducationsScalarFieldEnum = {
  UE_ID: 'UE_ID',
  ApplicationID: 'ApplicationID',
  DegreeOrDiploma: 'DegreeOrDiploma',
  Institute: 'Institute',
  FromYear: 'FromYear',
  ToYear: 'ToYear',
  Class: 'Class',
  YearObtained: 'YearObtained',
  IndexNumber: 'IndexNumber'
};

exports.Prisma.UserScalarFieldEnum = {
  UserID: 'UserID',
  FullName: 'FullName',
  Email: 'Email',
  PasswordHash: 'PasswordHash',
  NIC: 'NIC',
  PhoneNumber: 'PhoneNumber',
  Address: 'Address',
  AccountStatus: 'AccountStatus',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.additionalinfoOrderByRelevanceFieldEnum = {
  Content: 'Content'
};

exports.Prisma.adminOrderByRelevanceFieldEnum = {
  FullName: 'FullName',
  Email: 'Email',
  PasswordHash: 'PasswordHash',
  Department: 'Department',
  PhoneNumber: 'PhoneNumber'
};

exports.Prisma.applicationOrderByRelevanceFieldEnum = {
  Remarks: 'Remarks'
};

exports.Prisma.applicationattachmentsOrderByRelevanceFieldEnum = {
  FileType: 'FileType',
  FilePath: 'FilePath'
};

exports.Prisma.applicationgeneraldetailsOrderByRelevanceFieldEnum = {
  PostApplied: 'PostApplied',
  FullName: 'FullName',
  NameWithInitials: 'NameWithInitials',
  NIC: 'NIC',
  PhoneNumber: 'PhoneNumber',
  Email: 'Email',
  PresentAddress: 'PresentAddress',
  PermanentAddress: 'PermanentAddress',
  CivilStatus: 'CivilStatus',
  CitizenshipDetails: 'CitizenshipDetails',
  EthnicityOrReligion: 'EthnicityOrReligion'
};

exports.Prisma.applicationreferencesOrderByRelevanceFieldEnum = {
  Name: 'Name',
  Designation: 'Designation',
  Address: 'Address'
};

exports.Prisma.applicationtemplateOrderByRelevanceFieldEnum = {
  FilePath: 'FilePath'
};

exports.Prisma.auditlogOrderByRelevanceFieldEnum = {
  Action: 'Action',
  Details: 'Details'
};

exports.Prisma.employmenthistoriesOrderByRelevanceFieldEnum = {
  PostHeld: 'PostHeld',
  Institution: 'Institution'
};

exports.Prisma.experiencedetailsOrderByRelevanceFieldEnum = {
  Description: 'Description'
};

exports.Prisma.gce_al_resultsOrderByRelevanceFieldEnum = {
  Subject: 'Subject',
  Grade: 'Grade'
};

exports.Prisma.gce_ol_resultsOrderByRelevanceFieldEnum = {
  Subject: 'Subject',
  Grade: 'Grade'
};

exports.Prisma.jobvacancyOrderByRelevanceFieldEnum = {
  Title: 'Title',
  Description: 'Description',
  Department: 'Department',
  Level: 'Level'
};

exports.Prisma.languageproficienciesOrderByRelevanceFieldEnum = {
  Language: 'Language'
};

exports.Prisma.professionalqualificationsOrderByRelevanceFieldEnum = {
  Institution: 'Institution',
  QualificationName: 'QualificationName',
  ResultOrExamPassed: 'ResultOrExamPassed'
};

exports.Prisma.researchandpublicationsOrderByRelevanceFieldEnum = {
  Description: 'Description'
};

exports.Prisma.specialqualificationsOrderByRelevanceFieldEnum = {
  Description: 'Description'
};

exports.Prisma.superadminOrderByRelevanceFieldEnum = {
  FullName: 'FullName',
  Email: 'Email',
  PasswordHash: 'PasswordHash',
  PhoneNumber: 'PhoneNumber'
};

exports.Prisma.universityeducationsOrderByRelevanceFieldEnum = {
  DegreeOrDiploma: 'DegreeOrDiploma',
  Institute: 'Institute',
  Class: 'Class',
  IndexNumber: 'IndexNumber'
};

exports.Prisma.userOrderByRelevanceFieldEnum = {
  FullName: 'FullName',
  Email: 'Email',
  PasswordHash: 'PasswordHash',
  NIC: 'NIC',
  PhoneNumber: 'PhoneNumber',
  Address: 'Address'
};
exports.application_Status = exports.$Enums.application_Status = {
  New: 'New',
  In_Reviewing: 'In_Reviewing',
  Called_for_Interview: 'Called_for_Interview',
  Hired: 'Hired',
  Rejected: 'Rejected'
};

exports.applicationgeneraldetails_Gender = exports.$Enums.applicationgeneraldetails_Gender = {
  Male: 'Male',
  Female: 'Female',
  Other: 'Other'
};

exports.applicationgeneraldetails_CitizenshipType = exports.$Enums.applicationgeneraldetails_CitizenshipType = {
  Descent: 'Descent',
  Registration: 'Registration'
};

exports.applicationtemplate_Type = exports.$Enums.applicationtemplate_Type = {
  Academic: 'Academic',
  Non_Academic: 'Non_Academic'
};

exports.auditlog_ActorRole = exports.$Enums.auditlog_ActorRole = {
  Admin: 'Admin',
  SuperAdmin: 'SuperAdmin'
};

exports.jobvacancy_Type = exports.$Enums.jobvacancy_Type = {
  Academic: 'Academic',
  Non_Academic: 'Non_Academic'
};

exports.jobvacancy_Status = exports.$Enums.jobvacancy_Status = {
  Open: 'Open',
  Closed: 'Closed'
};

exports.languageproficiencies_CanSpeak = exports.$Enums.languageproficiencies_CanSpeak = {
  Very_Good: 'Very_Good',
  Good: 'Good',
  Fair: 'Fair',
  None: 'None'
};

exports.languageproficiencies_CanRead = exports.$Enums.languageproficiencies_CanRead = {
  Very_Good: 'Very_Good',
  Good: 'Good',
  Fair: 'Fair',
  None: 'None'
};

exports.languageproficiencies_CanWrite = exports.$Enums.languageproficiencies_CanWrite = {
  Very_Good: 'Very_Good',
  Good: 'Good',
  Fair: 'Fair',
  None: 'None'
};

exports.languageproficiencies_CanTeach = exports.$Enums.languageproficiencies_CanTeach = {
  Very_Good: 'Very_Good',
  Good: 'Good',
  Fair: 'Fair',
  None: 'None'
};

exports.user_AccountStatus = exports.$Enums.user_AccountStatus = {
  Active: 'Active',
  Suspended: 'Suspended',
  Deleted: 'Deleted'
};

exports.Prisma.ModelName = {
  additionalinfo: 'additionalinfo',
  admin: 'admin',
  application: 'application',
  applicationattachments: 'applicationattachments',
  applicationgeneraldetails: 'applicationgeneraldetails',
  applicationreferences: 'applicationreferences',
  applicationtemplate: 'applicationtemplate',
  auditlog: 'auditlog',
  employmenthistories: 'employmenthistories',
  experiencedetails: 'experiencedetails',
  gce_al_results: 'gce_al_results',
  gce_ol_results: 'gce_ol_results',
  jobvacancy: 'jobvacancy',
  languageproficiencies: 'languageproficiencies',
  professionalqualifications: 'professionalqualifications',
  researchandpublications: 'researchandpublications',
  specialqualifications: 'specialqualifications',
  superadmin: 'superadmin',
  universityeducations: 'universityeducations',
  user: 'user'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
